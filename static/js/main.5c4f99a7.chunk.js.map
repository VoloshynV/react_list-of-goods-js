{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","sortOptions","App","useState","sortBy","setSortBy","isReversed","setIsReversed","isOptionsModified","preparedGoods","goods","sort","a","b","localeCompare","length","reverse","getPrepareGoods","className","type","cn","onClick","prev","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EACQ,aADRA,EAEI,SAFJA,EAIK,GA+BEC,EAAM,WACjB,MAA4BC,mBAASF,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAAoBJ,IAAWH,GAAuBK,EAEtDG,EAlCgB,SAACC,EAAD,GAGjB,IAFLN,EAEI,EAFJA,OACAE,EACI,EADJA,WAEMG,EAAa,YAAOC,GAiB1B,OAfIN,GACFK,EAAcE,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKH,EACH,OAAOW,EAAEE,cAAcD,GAEzB,KAAKZ,EACH,OAAOW,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXT,EACKG,EAAcO,UAGhBP,EASeQ,CAAgBjB,EAAiB,CACrDI,SACAE,eAQF,OAEE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,IAAWH,IAEzBoB,QAAS,kBAAMhB,EAAUJ,IAL3B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYhB,IAAWH,IAEzBoB,QAAS,kBAAMhB,EAAUJ,IAL3B,4BAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAad,IAEfe,QAAS,kBAAMd,GAAc,SAAAe,GAAI,OAAKA,MALxC,qBAUCd,GACC,wBACEW,KAAK,SACLD,UAAU,4BACVG,QA3CI,WACZhB,EAAUJ,GACVM,GAAc,IAsCR,sBAUJ,6BACGE,EAAcc,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5c4f99a7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortOptions = {\n  alphabetic: 'alphabetic',\n  length: 'length',\n  reverse: 'reverse',\n  default: '',\n};\n\nconst getPrepareGoods = (goods, {\n  sortBy,\n  isReversed,\n}) => {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((a, b) => {\n      switch (sortBy) {\n        case sortOptions.alphabetic:\n          return a.localeCompare(b);\n\n        case sortOptions.length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState(sortOptions.default);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const isOptionsModified = sortBy !== sortOptions.default || isReversed;\n\n  const preparedGoods = getPrepareGoods(goodsFromServer, {\n    sortBy,\n    isReversed,\n  });\n\n  const reset = () => {\n    setSortBy(sortOptions.default);\n    setIsReversed(false);\n  };\n\n  return (\n\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== sortOptions.alphabetic,\n          })}\n          onClick={() => setSortBy(sortOptions.alphabetic)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== sortOptions.length,\n          })}\n          onClick={() => setSortBy(sortOptions.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(prev => !prev)}\n        >\n          Reverse\n        </button>\n\n        {isOptionsModified && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {preparedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}